#include<bits/stdc++.h>
using namespace std;

const int N = 104;

int n, m, id, lab[N], ans[N];
bool visit[N];
vector<int> a[N];

//--------------compositon----------------
void DFS(int u) {
     visit[u] = 1;
     for (int i = 0; i < (int) a[u].size(); ++i) {
          int v = a[u][i];
          if (!visit[v]) DFS(v);
     }
     lab[u] = id; ans[id] = u;
     id--;
}
//------------------------------------------
void cass() {
     ios::sync_with_stdio(0);
     cin.tie(0);
     freopen("nhap.inp", "r", stdin);
     freopen("nhap.out", "w", stdout);
}

void read() {
     cin >> n >> m;
     int u, v;
     for (int i = 1; i <= m; ++i) {
          cin >> u >> v;
          a[u].push_back(v);
     }
}

void solve() {
     id = n;
     memset(visit, 0, sizeof(visit));
     for (int i = 1; i <= n; ++i)
          if (!visit[i]) DFS(i);
     for (int i = 1; i <= n; ++i) cout << lab[i] << '\n';
}

int main() {
     cass(); read();
     solve();
     return 0;
}
